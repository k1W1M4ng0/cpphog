// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hedgehog/protocol/proto/motor.proto

#include "hedgehog/protocol/proto/motor.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace hedgehog {
namespace protocol {
namespace proto {
      template <typename>
PROTOBUF_CONSTEXPR StepperConfig::StepperConfig(::_pbi::ConstantInitialized) {}
struct StepperConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepperConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepperConfigDefaultTypeInternal() {}
  union {
    StepperConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepperConfigDefaultTypeInternal _StepperConfig_default_instance_;

inline constexpr MotorSetPositionAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_{0u},
        position_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MotorSetPositionAction::MotorSetPositionAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MotorSetPositionActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotorSetPositionActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotorSetPositionActionDefaultTypeInternal() {}
  union {
    MotorSetPositionAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotorSetPositionActionDefaultTypeInternal _MotorSetPositionAction_default_instance_;

inline constexpr MotorAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_{0u},
        state_{static_cast< ::hedgehog::protocol::proto::MotorState >(0)},
        amount_{0},
        reached_state_{static_cast< ::hedgehog::protocol::proto::MotorState >(0)},
        position_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MotorAction::MotorAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MotorActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotorActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotorActionDefaultTypeInternal() {}
  union {
    MotorAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotorActionDefaultTypeInternal _MotorAction_default_instance_;

inline constexpr EncoderConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : encoder_a_port_{0u},
        encoder_b_port_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncoderConfig::EncoderConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EncoderConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncoderConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncoderConfigDefaultTypeInternal() {}
  union {
    EncoderConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncoderConfigDefaultTypeInternal _EncoderConfig_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DcConfig::DcConfig(::_pbi::ConstantInitialized) {}
struct DcConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DcConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DcConfigDefaultTypeInternal() {}
  union {
    DcConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DcConfigDefaultTypeInternal _DcConfig_default_instance_;

inline constexpr MotorStateMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscription_{nullptr},
        port_{0u},
        velocity_{0},
        position_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MotorStateMessage::MotorStateMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MotorStateMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotorStateMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotorStateMessageDefaultTypeInternal() {}
  union {
    MotorStateMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotorStateMessageDefaultTypeInternal _MotorStateMessage_default_instance_;

inline constexpr MotorConfigAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_{0u},
        config_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MotorConfigAction::MotorConfigAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MotorConfigActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotorConfigActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotorConfigActionDefaultTypeInternal() {}
  union {
    MotorConfigAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotorConfigActionDefaultTypeInternal _MotorConfigAction_default_instance_;

inline constexpr MotorCommandMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscription_{nullptr},
        port_{0u},
        state_{static_cast< ::hedgehog::protocol::proto::MotorState >(0)},
        amount_{0},
        config_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MotorCommandMessage::MotorCommandMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MotorCommandMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotorCommandMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotorCommandMessageDefaultTypeInternal() {}
  union {
    MotorCommandMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotorCommandMessageDefaultTypeInternal _MotorCommandMessage_default_instance_;
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
static ::_pb::Metadata file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fmotor_2eproto = nullptr;
const ::uint32_t TableStruct_hedgehog_2fprotocol_2fproto_2fmotor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::DcConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::EncoderConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::EncoderConfig, _impl_.encoder_a_port_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::EncoderConfig, _impl_.encoder_b_port_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::StepperConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_.reached_state_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_.position_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorConfigAction, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorConfigAction, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorConfigAction, _impl_.port_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorConfigAction, _impl_.config_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_.port_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_.subscription_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_.config_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _impl_.velocity_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorStateMessage, _impl_.subscription_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorSetPositionAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorSetPositionAction, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorSetPositionAction, _impl_.position_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::hedgehog::protocol::proto::DcConfig)},
        {8, -1, -1, sizeof(::hedgehog::protocol::proto::EncoderConfig)},
        {18, -1, -1, sizeof(::hedgehog::protocol::proto::StepperConfig)},
        {26, -1, -1, sizeof(::hedgehog::protocol::proto::MotorAction)},
        {41, -1, -1, sizeof(::hedgehog::protocol::proto::MotorConfigAction)},
        {54, 70, -1, sizeof(::hedgehog::protocol::proto::MotorCommandMessage)},
        {77, 89, -1, sizeof(::hedgehog::protocol::proto::MotorStateMessage)},
        {93, -1, -1, sizeof(::hedgehog::protocol::proto::MotorSetPositionAction)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::hedgehog::protocol::proto::_DcConfig_default_instance_._instance,
    &::hedgehog::protocol::proto::_EncoderConfig_default_instance_._instance,
    &::hedgehog::protocol::proto::_StepperConfig_default_instance_._instance,
    &::hedgehog::protocol::proto::_MotorAction_default_instance_._instance,
    &::hedgehog::protocol::proto::_MotorConfigAction_default_instance_._instance,
    &::hedgehog::protocol::proto::_MotorCommandMessage_default_instance_._instance,
    &::hedgehog::protocol::proto::_MotorStateMessage_default_instance_._instance,
    &::hedgehog::protocol::proto::_MotorSetPositionAction_default_instance_._instance,
};
const char descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n#hedgehog/protocol/proto/motor.proto\022\027h"
    "edgehog.protocol.proto\032*hedgehog/protoco"
    "l/proto/subscription.proto\"\n\n\010DcConfig\"\?"
    "\n\rEncoderConfig\022\026\n\016encoder_a_port\030\001 \001(\r\022"
    "\026\n\016encoder_b_port\030\002 \001(\r\"\017\n\rStepperConfig"
    "\"\317\001\n\013MotorAction\022\014\n\004port\030\001 \001(\r\0222\n\005state\030"
    "\002 \001(\0162#.hedgehog.protocol.proto.MotorSta"
    "te\022\016\n\006amount\030\003 \001(\021\022:\n\rreached_state\030\004 \001("
    "\0162#.hedgehog.protocol.proto.MotorState\022\022"
    "\n\010relative\030\005 \001(\021H\000\022\022\n\010absolute\030\006 \001(\021H\000B\n"
    "\n\010position\"\322\001\n\021MotorConfigAction\022\014\n\004port"
    "\030\001 \001(\r\022/\n\002dc\030\002 \001(\0132!.hedgehog.protocol.p"
    "roto.DcConfigH\000\0229\n\007encoder\030\003 \001(\0132&.hedge"
    "hog.protocol.proto.EncoderConfigH\000\0229\n\007st"
    "epper\030\004 \001(\0132&.hedgehog.protocol.proto.St"
    "epperConfigH\000B\010\n\006config\"\325\002\n\023MotorCommand"
    "Message\022\014\n\004port\030\001 \001(\r\022/\n\002dc\030\005 \001(\0132!.hedg"
    "ehog.protocol.proto.DcConfigH\000\0229\n\007encode"
    "r\030\006 \001(\0132&.hedgehog.protocol.proto.Encode"
    "rConfigH\000\0229\n\007stepper\030\007 \001(\0132&.hedgehog.pr"
    "otocol.proto.StepperConfigH\000\0222\n\005state\030\002 "
    "\001(\0162#.hedgehog.protocol.proto.MotorState"
    "\022\016\n\006amount\030\003 \001(\021\022;\n\014subscription\030\004 \001(\0132%"
    ".hedgehog.protocol.proto.SubscriptionB\010\n"
    "\006config\"\202\001\n\021MotorStateMessage\022\014\n\004port\030\001 "
    "\001(\r\022\020\n\010velocity\030\002 \001(\021\022\020\n\010position\030\003 \001(\021\022"
    ";\n\014subscription\030\004 \001(\0132%.hedgehog.protoco"
    "l.proto.Subscription\"8\n\026MotorSetPosition"
    "Action\022\014\n\004port\030\001 \001(\r\022\020\n\010position\030\002 \001(\021*0"
    "\n\nMotorState\022\t\n\005POWER\020\000\022\t\n\005BRAKE\020\001\022\014\n\010VE"
    "LOCITY\020\002B)\n\037at.pria.hedgehog.protocol.pr"
    "otoB\006MotorPb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_deps[1] =
    {
        &::descriptor_table_hedgehog_2fprotocol_2fproto_2fsubscription_2eproto,
};
static ::absl::once_flag descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto = {
    false,
    false,
    1259,
    descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fmotor_2eproto,
    "hedgehog/protocol/proto/motor.proto",
    &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
    descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_hedgehog_2fprotocol_2fproto_2fmotor_2eproto::offsets,
    file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto,
    file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fmotor_2eproto,
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fmotor_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter() {
  return &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_hedgehog_2fprotocol_2fproto_2fmotor_2eproto(&descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto);
namespace hedgehog {
namespace protocol {
namespace proto {
const ::google::protobuf::EnumDescriptor* MotorState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto);
  return file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MotorState_internal_data_[] = {
    196608u, 0u, };
bool MotorState_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class DcConfig::_Internal {
 public:
};

DcConfig::DcConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.DcConfig)
}
DcConfig::DcConfig(
    ::google::protobuf::Arena* arena,
    const DcConfig& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DcConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.DcConfig)
}









::google::protobuf::Metadata DcConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[0]);
}
// ===================================================================

class EncoderConfig::_Internal {
 public:
};

EncoderConfig::EncoderConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.EncoderConfig)
}
EncoderConfig::EncoderConfig(
    ::google::protobuf::Arena* arena, const EncoderConfig& from)
    : EncoderConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EncoderConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EncoderConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encoder_a_port_),
           0,
           offsetof(Impl_, encoder_b_port_) -
               offsetof(Impl_, encoder_a_port_) +
               sizeof(Impl_::encoder_b_port_));
}
EncoderConfig::~EncoderConfig() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.EncoderConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EncoderConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EncoderConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.EncoderConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.encoder_a_port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.encoder_b_port_) -
      reinterpret_cast<char*>(&_impl_.encoder_a_port_)) + sizeof(_impl_.encoder_b_port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EncoderConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EncoderConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EncoderConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 encoder_b_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncoderConfig, _impl_.encoder_b_port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_b_port_)}},
    // uint32 encoder_a_port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncoderConfig, _impl_.encoder_a_port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_a_port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 encoder_a_port = 1;
    {PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_a_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 encoder_b_port = 2;
    {PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_b_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EncoderConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.EncoderConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 encoder_a_port = 1;
  if (this->_internal_encoder_a_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_encoder_a_port(), target);
  }

  // uint32 encoder_b_port = 2;
  if (this->_internal_encoder_b_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_encoder_b_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.EncoderConfig)
  return target;
}

::size_t EncoderConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.EncoderConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 encoder_a_port = 1;
  if (this->_internal_encoder_a_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_encoder_a_port());
  }

  // uint32 encoder_b_port = 2;
  if (this->_internal_encoder_b_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_encoder_b_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EncoderConfig::_class_data_ = {
    EncoderConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EncoderConfig::GetClassData() const {
  return &_class_data_;
}

void EncoderConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EncoderConfig*>(&to_msg);
  auto& from = static_cast<const EncoderConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.EncoderConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_encoder_a_port() != 0) {
    _this->_internal_set_encoder_a_port(from._internal_encoder_a_port());
  }
  if (from._internal_encoder_b_port() != 0) {
    _this->_internal_set_encoder_b_port(from._internal_encoder_b_port());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncoderConfig::CopyFrom(const EncoderConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.EncoderConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EncoderConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EncoderConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EncoderConfig::InternalSwap(EncoderConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_b_port_)
      + sizeof(EncoderConfig::_impl_.encoder_b_port_)
      - PROTOBUF_FIELD_OFFSET(EncoderConfig, _impl_.encoder_a_port_)>(
          reinterpret_cast<char*>(&_impl_.encoder_a_port_),
          reinterpret_cast<char*>(&other->_impl_.encoder_a_port_));
}

::google::protobuf::Metadata EncoderConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[1]);
}
// ===================================================================

class StepperConfig::_Internal {
 public:
};

StepperConfig::StepperConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.StepperConfig)
}
StepperConfig::StepperConfig(
    ::google::protobuf::Arena* arena,
    const StepperConfig& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StepperConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.StepperConfig)
}









::google::protobuf::Metadata StepperConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[2]);
}
// ===================================================================

class MotorAction::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorAction, _impl_._oneof_case_);
};

MotorAction::MotorAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.MotorAction)
}
inline PROTOBUF_NDEBUG_INLINE MotorAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : position_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MotorAction::MotorAction(
    ::google::protobuf::Arena* arena,
    const MotorAction& from)
    : ::google::protobuf::Message(arena) {
  MotorAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, reached_state_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::reached_state_));
  switch (position_case()) {
    case POSITION_NOT_SET:
      break;
      case kRelative:
        _impl_.position_.relative_ = from._impl_.position_.relative_;
        break;
      case kAbsolute:
        _impl_.position_.absolute_ = from._impl_.position_.absolute_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.MotorAction)
}
inline PROTOBUF_NDEBUG_INLINE MotorAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : position_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MotorAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, reached_state_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::reached_state_));
}
MotorAction::~MotorAction() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.MotorAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MotorAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_position()) {
    clear_position();
  }
  _impl_.~Impl_();
}

void MotorAction::clear_position() {
// @@protoc_insertion_point(one_of_clear_start:hedgehog.protocol.proto.MotorAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (position_case()) {
    case kRelative: {
      // No need to clear
      break;
    }
    case kAbsolute: {
      // No need to clear
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POSITION_NOT_SET;
}


PROTOBUF_NOINLINE void MotorAction::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.MotorAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reached_state_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.reached_state_));
  clear_position();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MotorAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 0, 0, 2> MotorAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MotorAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .hedgehog.protocol.proto.MotorState reached_state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorAction, _impl_.reached_state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.reached_state_)}},
    // uint32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorAction, _impl_.port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.port_)}},
    // .hedgehog.protocol.proto.MotorState state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorAction, _impl_.state_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.state_)}},
    // sint32 amount = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 port = 1;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .hedgehog.protocol.proto.MotorState state = 2;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // sint32 amount = 3;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // .hedgehog.protocol.proto.MotorState reached_state = 4;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.reached_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // sint32 relative = 5;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.position_.relative_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt32)},
    // sint32 absolute = 6;
    {PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.position_.absolute_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MotorAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.MotorAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_port(), target);
  }

  // .hedgehog.protocol.proto.MotorState state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_state(), target);
  }

  // sint32 amount = 3;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_amount(), target);
  }

  // .hedgehog.protocol.proto.MotorState reached_state = 4;
  if (this->_internal_reached_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_reached_state(), target);
  }

  switch (position_case()) {
    case kRelative: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
          5, this->_internal_relative(), target);
      break;
    }
    case kAbsolute: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
          6, this->_internal_absolute(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.MotorAction)
  return target;
}

::size_t MotorAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.MotorAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // .hedgehog.protocol.proto.MotorState state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // sint32 amount = 3;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_amount());
  }

  // .hedgehog.protocol.proto.MotorState reached_state = 4;
  if (this->_internal_reached_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_reached_state());
  }

  switch (position_case()) {
    // sint32 relative = 5;
    case kRelative: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_relative());
      break;
    }
    // sint32 absolute = 6;
    case kAbsolute: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_absolute());
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MotorAction::_class_data_ = {
    MotorAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MotorAction::GetClassData() const {
  return &_class_data_;
}

void MotorAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MotorAction*>(&to_msg);
  auto& from = static_cast<const MotorAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.MotorAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (from._internal_reached_state() != 0) {
    _this->_internal_set_reached_state(from._internal_reached_state());
  }
  switch (from.position_case()) {
    case kRelative: {
      _this->_internal_set_relative(from._internal_relative());
      break;
    }
    case kAbsolute: {
      _this->_internal_set_absolute(from._internal_absolute());
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotorAction::CopyFrom(const MotorAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.MotorAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MotorAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MotorAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MotorAction::InternalSwap(MotorAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.reached_state_)
      + sizeof(MotorAction::_impl_.reached_state_)
      - PROTOBUF_FIELD_OFFSET(MotorAction, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
  swap(_impl_.position_, other->_impl_.position_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MotorAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[3]);
}
// ===================================================================

class MotorConfigAction::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorConfigAction, _impl_._oneof_case_);
  static const ::hedgehog::protocol::proto::DcConfig& dc(const MotorConfigAction* msg);
  static const ::hedgehog::protocol::proto::EncoderConfig& encoder(const MotorConfigAction* msg);
  static const ::hedgehog::protocol::proto::StepperConfig& stepper(const MotorConfigAction* msg);
};

const ::hedgehog::protocol::proto::DcConfig& MotorConfigAction::_Internal::dc(const MotorConfigAction* msg) {
  return *msg->_impl_.config_.dc_;
}
const ::hedgehog::protocol::proto::EncoderConfig& MotorConfigAction::_Internal::encoder(const MotorConfigAction* msg) {
  return *msg->_impl_.config_.encoder_;
}
const ::hedgehog::protocol::proto::StepperConfig& MotorConfigAction::_Internal::stepper(const MotorConfigAction* msg) {
  return *msg->_impl_.config_.stepper_;
}
void MotorConfigAction::set_allocated_dc(::hedgehog::protocol::proto::DcConfig* dc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (dc) {
    ::google::protobuf::Arena* submessage_arena = dc->GetArena();
    if (message_arena != submessage_arena) {
      dc = ::google::protobuf::internal::GetOwnedMessage(message_arena, dc, submessage_arena);
    }
    set_has_dc();
    _impl_.config_.dc_ = dc;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorConfigAction.dc)
}
void MotorConfigAction::set_allocated_encoder(::hedgehog::protocol::proto::EncoderConfig* encoder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (encoder) {
    ::google::protobuf::Arena* submessage_arena = encoder->GetArena();
    if (message_arena != submessage_arena) {
      encoder = ::google::protobuf::internal::GetOwnedMessage(message_arena, encoder, submessage_arena);
    }
    set_has_encoder();
    _impl_.config_.encoder_ = encoder;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorConfigAction.encoder)
}
void MotorConfigAction::set_allocated_stepper(::hedgehog::protocol::proto::StepperConfig* stepper) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (stepper) {
    ::google::protobuf::Arena* submessage_arena = stepper->GetArena();
    if (message_arena != submessage_arena) {
      stepper = ::google::protobuf::internal::GetOwnedMessage(message_arena, stepper, submessage_arena);
    }
    set_has_stepper();
    _impl_.config_.stepper_ = stepper;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorConfigAction.stepper)
}
MotorConfigAction::MotorConfigAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.MotorConfigAction)
}
inline PROTOBUF_NDEBUG_INLINE MotorConfigAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : config_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MotorConfigAction::MotorConfigAction(
    ::google::protobuf::Arena* arena,
    const MotorConfigAction& from)
    : ::google::protobuf::Message(arena) {
  MotorConfigAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.port_ = from._impl_.port_;
  switch (config_case()) {
    case CONFIG_NOT_SET:
      break;
      case kDc:
        _impl_.config_.dc_ = CreateMaybeMessage<::hedgehog::protocol::proto::DcConfig>(arena, *from._impl_.config_.dc_);
        break;
      case kEncoder:
        _impl_.config_.encoder_ = CreateMaybeMessage<::hedgehog::protocol::proto::EncoderConfig>(arena, *from._impl_.config_.encoder_);
        break;
      case kStepper:
        _impl_.config_.stepper_ = CreateMaybeMessage<::hedgehog::protocol::proto::StepperConfig>(arena, *from._impl_.config_.stepper_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.MotorConfigAction)
}
inline PROTOBUF_NDEBUG_INLINE MotorConfigAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MotorConfigAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
MotorConfigAction::~MotorConfigAction() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.MotorConfigAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MotorConfigAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_config()) {
    clear_config();
  }
  _impl_.~Impl_();
}

void MotorConfigAction::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:hedgehog.protocol.proto.MotorConfigAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (config_case()) {
    case kDc: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.dc_;
      }
      break;
    }
    case kEncoder: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.encoder_;
      }
      break;
    }
    case kStepper: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.stepper_;
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}


PROTOBUF_NOINLINE void MotorConfigAction::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.MotorConfigAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_ = 0u;
  clear_config();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MotorConfigAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 0, 2> MotorConfigAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MotorConfigAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorConfigAction, _impl_.port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MotorConfigAction, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 port = 1;
    {PROTOBUF_FIELD_OFFSET(MotorConfigAction, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .hedgehog.protocol.proto.DcConfig dc = 2;
    {PROTOBUF_FIELD_OFFSET(MotorConfigAction, _impl_.config_.dc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .hedgehog.protocol.proto.EncoderConfig encoder = 3;
    {PROTOBUF_FIELD_OFFSET(MotorConfigAction, _impl_.config_.encoder_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .hedgehog.protocol.proto.StepperConfig stepper = 4;
    {PROTOBUF_FIELD_OFFSET(MotorConfigAction, _impl_.config_.stepper_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::hedgehog::protocol::proto::_DcConfig_default_instance_},
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::EncoderConfig>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::hedgehog::protocol::proto::_StepperConfig_default_instance_},
  }}, {{
  }},
};

::uint8_t* MotorConfigAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.MotorConfigAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_port(), target);
  }

  switch (config_case()) {
    case kDc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::dc(this),
          _Internal::dc(this).GetCachedSize(), target, stream);
      break;
    }
    case kEncoder: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::encoder(this),
          _Internal::encoder(this).GetCachedSize(), target, stream);
      break;
    }
    case kStepper: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::stepper(this),
          _Internal::stepper(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.MotorConfigAction)
  return target;
}

::size_t MotorConfigAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.MotorConfigAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  switch (config_case()) {
    // .hedgehog.protocol.proto.DcConfig dc = 2;
    case kDc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.dc_);
      break;
    }
    // .hedgehog.protocol.proto.EncoderConfig encoder = 3;
    case kEncoder: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.encoder_);
      break;
    }
    // .hedgehog.protocol.proto.StepperConfig stepper = 4;
    case kStepper: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.stepper_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MotorConfigAction::_class_data_ = {
    MotorConfigAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MotorConfigAction::GetClassData() const {
  return &_class_data_;
}

void MotorConfigAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MotorConfigAction*>(&to_msg);
  auto& from = static_cast<const MotorConfigAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.MotorConfigAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  switch (from.config_case()) {
    case kDc: {
      _this->_internal_mutable_dc()->::hedgehog::protocol::proto::DcConfig::MergeFrom(
          from._internal_dc());
      break;
    }
    case kEncoder: {
      _this->_internal_mutable_encoder()->::hedgehog::protocol::proto::EncoderConfig::MergeFrom(
          from._internal_encoder());
      break;
    }
    case kStepper: {
      _this->_internal_mutable_stepper()->::hedgehog::protocol::proto::StepperConfig::MergeFrom(
          from._internal_stepper());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotorConfigAction::CopyFrom(const MotorConfigAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.MotorConfigAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MotorConfigAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MotorConfigAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MotorConfigAction::InternalSwap(MotorConfigAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.port_, other->_impl_.port_);
  swap(_impl_.config_, other->_impl_.config_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MotorConfigAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[4]);
}
// ===================================================================

class MotorCommandMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<MotorCommandMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::MotorCommandMessage, _impl_._oneof_case_);
  static const ::hedgehog::protocol::proto::DcConfig& dc(const MotorCommandMessage* msg);
  static const ::hedgehog::protocol::proto::EncoderConfig& encoder(const MotorCommandMessage* msg);
  static const ::hedgehog::protocol::proto::StepperConfig& stepper(const MotorCommandMessage* msg);
  static const ::hedgehog::protocol::proto::Subscription& subscription(const MotorCommandMessage* msg);
  static void set_has_subscription(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::hedgehog::protocol::proto::DcConfig& MotorCommandMessage::_Internal::dc(const MotorCommandMessage* msg) {
  return *msg->_impl_.config_.dc_;
}
const ::hedgehog::protocol::proto::EncoderConfig& MotorCommandMessage::_Internal::encoder(const MotorCommandMessage* msg) {
  return *msg->_impl_.config_.encoder_;
}
const ::hedgehog::protocol::proto::StepperConfig& MotorCommandMessage::_Internal::stepper(const MotorCommandMessage* msg) {
  return *msg->_impl_.config_.stepper_;
}
const ::hedgehog::protocol::proto::Subscription& MotorCommandMessage::_Internal::subscription(const MotorCommandMessage* msg) {
  return *msg->_impl_.subscription_;
}
void MotorCommandMessage::set_allocated_dc(::hedgehog::protocol::proto::DcConfig* dc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (dc) {
    ::google::protobuf::Arena* submessage_arena = dc->GetArena();
    if (message_arena != submessage_arena) {
      dc = ::google::protobuf::internal::GetOwnedMessage(message_arena, dc, submessage_arena);
    }
    set_has_dc();
    _impl_.config_.dc_ = dc;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorCommandMessage.dc)
}
void MotorCommandMessage::set_allocated_encoder(::hedgehog::protocol::proto::EncoderConfig* encoder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (encoder) {
    ::google::protobuf::Arena* submessage_arena = encoder->GetArena();
    if (message_arena != submessage_arena) {
      encoder = ::google::protobuf::internal::GetOwnedMessage(message_arena, encoder, submessage_arena);
    }
    set_has_encoder();
    _impl_.config_.encoder_ = encoder;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorCommandMessage.encoder)
}
void MotorCommandMessage::set_allocated_stepper(::hedgehog::protocol::proto::StepperConfig* stepper) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (stepper) {
    ::google::protobuf::Arena* submessage_arena = stepper->GetArena();
    if (message_arena != submessage_arena) {
      stepper = ::google::protobuf::internal::GetOwnedMessage(message_arena, stepper, submessage_arena);
    }
    set_has_stepper();
    _impl_.config_.stepper_ = stepper;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.MotorCommandMessage.stepper)
}
void MotorCommandMessage::clear_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.subscription_ != nullptr) _impl_.subscription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MotorCommandMessage::MotorCommandMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.MotorCommandMessage)
}
inline PROTOBUF_NDEBUG_INLINE MotorCommandMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        config_{},
        _oneof_case_{from._oneof_case_[0]} {}

MotorCommandMessage::MotorCommandMessage(
    ::google::protobuf::Arena* arena,
    const MotorCommandMessage& from)
    : ::google::protobuf::Message(arena) {
  MotorCommandMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscription_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::hedgehog::protocol::proto::Subscription>(arena, *from._impl_.subscription_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, amount_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::amount_));
  switch (config_case()) {
    case CONFIG_NOT_SET:
      break;
      case kDc:
        _impl_.config_.dc_ = CreateMaybeMessage<::hedgehog::protocol::proto::DcConfig>(arena, *from._impl_.config_.dc_);
        break;
      case kEncoder:
        _impl_.config_.encoder_ = CreateMaybeMessage<::hedgehog::protocol::proto::EncoderConfig>(arena, *from._impl_.config_.encoder_);
        break;
      case kStepper:
        _impl_.config_.stepper_ = CreateMaybeMessage<::hedgehog::protocol::proto::StepperConfig>(arena, *from._impl_.config_.stepper_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.MotorCommandMessage)
}
inline PROTOBUF_NDEBUG_INLINE MotorCommandMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        config_{},
        _oneof_case_{} {}

inline void MotorCommandMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_),
           0,
           offsetof(Impl_, amount_) -
               offsetof(Impl_, subscription_) +
               sizeof(Impl_::amount_));
}
MotorCommandMessage::~MotorCommandMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.MotorCommandMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MotorCommandMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.subscription_;
  if (has_config()) {
    clear_config();
  }
  _impl_.~Impl_();
}

void MotorCommandMessage::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:hedgehog.protocol.proto.MotorCommandMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (config_case()) {
    case kDc: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.dc_;
      }
      break;
    }
    case kEncoder: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.encoder_;
      }
      break;
    }
    case kStepper: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.stepper_;
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}


PROTOBUF_NOINLINE void MotorCommandMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.MotorCommandMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subscription_ != nullptr);
    _impl_.subscription_->Clear();
  }
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.amount_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.amount_));
  clear_config();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MotorCommandMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 4, 0, 2> MotorCommandMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_._has_bits_),
    0, // no _extensions_
    7, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MotorCommandMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .hedgehog.protocol.proto.Subscription subscription = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.subscription_)}},
    // uint32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorCommandMessage, _impl_.port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.port_)}},
    // .hedgehog.protocol.proto.MotorState state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorCommandMessage, _impl_.state_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.state_)}},
    // sint32 amount = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 port = 1;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .hedgehog.protocol.proto.MotorState state = 2;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // sint32 amount = 3;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // .hedgehog.protocol.proto.Subscription subscription = 4;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.subscription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .hedgehog.protocol.proto.DcConfig dc = 5;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.config_.dc_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .hedgehog.protocol.proto.EncoderConfig encoder = 6;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.config_.encoder_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .hedgehog.protocol.proto.StepperConfig stepper = 7;
    {PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.config_.stepper_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Subscription>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::hedgehog::protocol::proto::_DcConfig_default_instance_},
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::EncoderConfig>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::hedgehog::protocol::proto::_StepperConfig_default_instance_},
  }}, {{
  }},
};

::uint8_t* MotorCommandMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.MotorCommandMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_port(), target);
  }

  // .hedgehog.protocol.proto.MotorState state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_state(), target);
  }

  // sint32 amount = 3;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_amount(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hedgehog.protocol.proto.Subscription subscription = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::subscription(this),
        _Internal::subscription(this).GetCachedSize(), target, stream);
  }

  switch (config_case()) {
    case kDc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::dc(this),
          _Internal::dc(this).GetCachedSize(), target, stream);
      break;
    }
    case kEncoder: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::encoder(this),
          _Internal::encoder(this).GetCachedSize(), target, stream);
      break;
    }
    case kStepper: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::stepper(this),
          _Internal::stepper(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.MotorCommandMessage)
  return target;
}

::size_t MotorCommandMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.MotorCommandMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hedgehog.protocol.proto.Subscription subscription = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.subscription_);
  }

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // .hedgehog.protocol.proto.MotorState state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // sint32 amount = 3;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_amount());
  }

  switch (config_case()) {
    // .hedgehog.protocol.proto.DcConfig dc = 5;
    case kDc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.dc_);
      break;
    }
    // .hedgehog.protocol.proto.EncoderConfig encoder = 6;
    case kEncoder: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.encoder_);
      break;
    }
    // .hedgehog.protocol.proto.StepperConfig stepper = 7;
    case kStepper: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_.stepper_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MotorCommandMessage::_class_data_ = {
    MotorCommandMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MotorCommandMessage::GetClassData() const {
  return &_class_data_;
}

void MotorCommandMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MotorCommandMessage*>(&to_msg);
  auto& from = static_cast<const MotorCommandMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.MotorCommandMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subscription()->::hedgehog::protocol::proto::Subscription::MergeFrom(
        from._internal_subscription());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  switch (from.config_case()) {
    case kDc: {
      _this->_internal_mutable_dc()->::hedgehog::protocol::proto::DcConfig::MergeFrom(
          from._internal_dc());
      break;
    }
    case kEncoder: {
      _this->_internal_mutable_encoder()->::hedgehog::protocol::proto::EncoderConfig::MergeFrom(
          from._internal_encoder());
      break;
    }
    case kStepper: {
      _this->_internal_mutable_stepper()->::hedgehog::protocol::proto::StepperConfig::MergeFrom(
          from._internal_stepper());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotorCommandMessage::CopyFrom(const MotorCommandMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.MotorCommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MotorCommandMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MotorCommandMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MotorCommandMessage::InternalSwap(MotorCommandMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.amount_)
      + sizeof(MotorCommandMessage::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(MotorCommandMessage, _impl_.subscription_)>(
          reinterpret_cast<char*>(&_impl_.subscription_),
          reinterpret_cast<char*>(&other->_impl_.subscription_));
  swap(_impl_.config_, other->_impl_.config_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MotorCommandMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[5]);
}
// ===================================================================

class MotorStateMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<MotorStateMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_._has_bits_);
  static const ::hedgehog::protocol::proto::Subscription& subscription(const MotorStateMessage* msg);
  static void set_has_subscription(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::hedgehog::protocol::proto::Subscription& MotorStateMessage::_Internal::subscription(const MotorStateMessage* msg) {
  return *msg->_impl_.subscription_;
}
void MotorStateMessage::clear_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.subscription_ != nullptr) _impl_.subscription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MotorStateMessage::MotorStateMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.MotorStateMessage)
}
inline PROTOBUF_NDEBUG_INLINE MotorStateMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MotorStateMessage::MotorStateMessage(
    ::google::protobuf::Arena* arena,
    const MotorStateMessage& from)
    : ::google::protobuf::Message(arena) {
  MotorStateMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscription_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::hedgehog::protocol::proto::Subscription>(arena, *from._impl_.subscription_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, position_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::position_));

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.MotorStateMessage)
}
inline PROTOBUF_NDEBUG_INLINE MotorStateMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MotorStateMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_),
           0,
           offsetof(Impl_, position_) -
               offsetof(Impl_, subscription_) +
               sizeof(Impl_::position_));
}
MotorStateMessage::~MotorStateMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.MotorStateMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MotorStateMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.subscription_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MotorStateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.MotorStateMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subscription_ != nullptr);
    _impl_.subscription_->Clear();
  }
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.position_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MotorStateMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> MotorStateMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MotorStateMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .hedgehog.protocol.proto.Subscription subscription = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.subscription_)}},
    // uint32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorStateMessage, _impl_.port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.port_)}},
    // sint32 velocity = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.velocity_)}},
    // sint32 position = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 port = 1;
    {PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // sint32 velocity = 2;
    {PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.velocity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 position = 3;
    {PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.position_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // .hedgehog.protocol.proto.Subscription subscription = 4;
    {PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.subscription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Subscription>()},
  }}, {{
  }},
};

::uint8_t* MotorStateMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.MotorStateMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_port(), target);
  }

  // sint32 velocity = 2;
  if (this->_internal_velocity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_velocity(), target);
  }

  // sint32 position = 3;
  if (this->_internal_position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_position(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hedgehog.protocol.proto.Subscription subscription = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::subscription(this),
        _Internal::subscription(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.MotorStateMessage)
  return target;
}

::size_t MotorStateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.MotorStateMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hedgehog.protocol.proto.Subscription subscription = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.subscription_);
  }

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // sint32 velocity = 2;
  if (this->_internal_velocity() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_velocity());
  }

  // sint32 position = 3;
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_position());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MotorStateMessage::_class_data_ = {
    MotorStateMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MotorStateMessage::GetClassData() const {
  return &_class_data_;
}

void MotorStateMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MotorStateMessage*>(&to_msg);
  auto& from = static_cast<const MotorStateMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.MotorStateMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subscription()->::hedgehog::protocol::proto::Subscription::MergeFrom(
        from._internal_subscription());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_velocity() != 0) {
    _this->_internal_set_velocity(from._internal_velocity());
  }
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotorStateMessage::CopyFrom(const MotorStateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.MotorStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MotorStateMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MotorStateMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MotorStateMessage::InternalSwap(MotorStateMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.position_)
      + sizeof(MotorStateMessage::_impl_.position_)
      - PROTOBUF_FIELD_OFFSET(MotorStateMessage, _impl_.subscription_)>(
          reinterpret_cast<char*>(&_impl_.subscription_),
          reinterpret_cast<char*>(&other->_impl_.subscription_));
}

::google::protobuf::Metadata MotorStateMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[6]);
}
// ===================================================================

class MotorSetPositionAction::_Internal {
 public:
};

MotorSetPositionAction::MotorSetPositionAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.MotorSetPositionAction)
}
MotorSetPositionAction::MotorSetPositionAction(
    ::google::protobuf::Arena* arena, const MotorSetPositionAction& from)
    : MotorSetPositionAction(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MotorSetPositionAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MotorSetPositionAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, position_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::position_));
}
MotorSetPositionAction::~MotorSetPositionAction() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.MotorSetPositionAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MotorSetPositionAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MotorSetPositionAction::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.MotorSetPositionAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.position_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MotorSetPositionAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MotorSetPositionAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MotorSetPositionAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // sint32 position = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.position_)}},
    // uint32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MotorSetPositionAction, _impl_.port_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 port = 1;
    {PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // sint32 position = 2;
    {PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.position_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MotorSetPositionAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.MotorSetPositionAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_port(), target);
  }

  // sint32 position = 2;
  if (this->_internal_position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_position(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.MotorSetPositionAction)
  return target;
}

::size_t MotorSetPositionAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.MotorSetPositionAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // sint32 position = 2;
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_position());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MotorSetPositionAction::_class_data_ = {
    MotorSetPositionAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MotorSetPositionAction::GetClassData() const {
  return &_class_data_;
}

void MotorSetPositionAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MotorSetPositionAction*>(&to_msg);
  auto& from = static_cast<const MotorSetPositionAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.MotorSetPositionAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotorSetPositionAction::CopyFrom(const MotorSetPositionAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.MotorSetPositionAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MotorSetPositionAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MotorSetPositionAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MotorSetPositionAction::InternalSwap(MotorSetPositionAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.position_)
      + sizeof(MotorSetPositionAction::_impl_.position_)
      - PROTOBUF_FIELD_OFFSET(MotorSetPositionAction, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata MotorSetPositionAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fmotor_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fmotor_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
