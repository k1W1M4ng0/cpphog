// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hedgehog/protocol/proto/emergency.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2femergency_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2femergency_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "hedgehog/protocol/proto/subscription.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_hedgehog_2fprotocol_2fproto_2femergency_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_hedgehog_2fprotocol_2fproto_2femergency_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_hedgehog_2fprotocol_2fproto_2femergency_2eproto;
namespace hedgehog {
namespace protocol {
namespace proto {
class EmergencyAction;
struct EmergencyActionDefaultTypeInternal;
extern EmergencyActionDefaultTypeInternal _EmergencyAction_default_instance_;
class EmergencyMessage;
struct EmergencyMessageDefaultTypeInternal;
extern EmergencyMessageDefaultTypeInternal _EmergencyMessage_default_instance_;
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace hedgehog {
namespace protocol {
namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class EmergencyAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hedgehog.protocol.proto.EmergencyAction) */ {
 public:
  inline EmergencyAction() : EmergencyAction(nullptr) {}
  ~EmergencyAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmergencyAction(::google::protobuf::internal::ConstantInitialized);

  inline EmergencyAction(const EmergencyAction& from)
      : EmergencyAction(nullptr, from) {}
  EmergencyAction(EmergencyAction&& from) noexcept
    : EmergencyAction() {
    *this = ::std::move(from);
  }

  inline EmergencyAction& operator=(const EmergencyAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmergencyAction& operator=(EmergencyAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmergencyAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmergencyAction* internal_default_instance() {
    return reinterpret_cast<const EmergencyAction*>(
               &_EmergencyAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EmergencyAction& a, EmergencyAction& b) {
    a.Swap(&b);
  }
  inline void Swap(EmergencyAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmergencyAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmergencyAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmergencyAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmergencyAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmergencyAction& from) {
    EmergencyAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmergencyAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "hedgehog.protocol.proto.EmergencyAction";
  }
  protected:
  explicit EmergencyAction(::google::protobuf::Arena* arena);
  EmergencyAction(::google::protobuf::Arena* arena, const EmergencyAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivateFieldNumber = 1,
  };
  // bool activate = 1;
  void clear_activate() ;
  bool activate() const;
  void set_activate(bool value);

  private:
  bool _internal_activate() const;
  void _internal_set_activate(bool value);

  public:
  // @@protoc_insertion_point(class_scope:hedgehog.protocol.proto.EmergencyAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool activate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hedgehog_2fprotocol_2fproto_2femergency_2eproto;
};// -------------------------------------------------------------------

class EmergencyMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hedgehog.protocol.proto.EmergencyMessage) */ {
 public:
  inline EmergencyMessage() : EmergencyMessage(nullptr) {}
  ~EmergencyMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmergencyMessage(::google::protobuf::internal::ConstantInitialized);

  inline EmergencyMessage(const EmergencyMessage& from)
      : EmergencyMessage(nullptr, from) {}
  EmergencyMessage(EmergencyMessage&& from) noexcept
    : EmergencyMessage() {
    *this = ::std::move(from);
  }

  inline EmergencyMessage& operator=(const EmergencyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmergencyMessage& operator=(EmergencyMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmergencyMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmergencyMessage* internal_default_instance() {
    return reinterpret_cast<const EmergencyMessage*>(
               &_EmergencyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EmergencyMessage& a, EmergencyMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(EmergencyMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmergencyMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmergencyMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmergencyMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmergencyMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmergencyMessage& from) {
    EmergencyMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmergencyMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "hedgehog.protocol.proto.EmergencyMessage";
  }
  protected:
  explicit EmergencyMessage(::google::protobuf::Arena* arena);
  EmergencyMessage(::google::protobuf::Arena* arena, const EmergencyMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionFieldNumber = 2,
    kActiveFieldNumber = 1,
  };
  // .hedgehog.protocol.proto.Subscription subscription = 2;
  bool has_subscription() const;
  void clear_subscription() ;
  const ::hedgehog::protocol::proto::Subscription& subscription() const;
  PROTOBUF_NODISCARD ::hedgehog::protocol::proto::Subscription* release_subscription();
  ::hedgehog::protocol::proto::Subscription* mutable_subscription();
  void set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value);
  void unsafe_arena_set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value);
  ::hedgehog::protocol::proto::Subscription* unsafe_arena_release_subscription();

  private:
  const ::hedgehog::protocol::proto::Subscription& _internal_subscription() const;
  ::hedgehog::protocol::proto::Subscription* _internal_mutable_subscription();

  public:
  // bool active = 1;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:hedgehog.protocol.proto.EmergencyMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::hedgehog::protocol::proto::Subscription* subscription_;
    bool active_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hedgehog_2fprotocol_2fproto_2femergency_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EmergencyAction

// bool activate = 1;
inline void EmergencyAction::clear_activate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.activate_ = false;
}
inline bool EmergencyAction::activate() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.EmergencyAction.activate)
  return _internal_activate();
}
inline void EmergencyAction::set_activate(bool value) {
  _internal_set_activate(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.EmergencyAction.activate)
}
inline bool EmergencyAction::_internal_activate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.activate_;
}
inline void EmergencyAction::_internal_set_activate(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.activate_ = value;
}

// -------------------------------------------------------------------

// EmergencyMessage

// bool active = 1;
inline void EmergencyMessage::clear_active() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.active_ = false;
}
inline bool EmergencyMessage::active() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.EmergencyMessage.active)
  return _internal_active();
}
inline void EmergencyMessage::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.EmergencyMessage.active)
}
inline bool EmergencyMessage::_internal_active() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_;
}
inline void EmergencyMessage::_internal_set_active(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.active_ = value;
}

// .hedgehog.protocol.proto.Subscription subscription = 2;
inline bool EmergencyMessage::has_subscription() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subscription_ != nullptr);
  return value;
}
inline const ::hedgehog::protocol::proto::Subscription& EmergencyMessage::_internal_subscription() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::hedgehog::protocol::proto::Subscription* p = _impl_.subscription_;
  return p != nullptr ? *p : reinterpret_cast<const ::hedgehog::protocol::proto::Subscription&>(::hedgehog::protocol::proto::_Subscription_default_instance_);
}
inline const ::hedgehog::protocol::proto::Subscription& EmergencyMessage::subscription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.EmergencyMessage.subscription)
  return _internal_subscription();
}
inline void EmergencyMessage::unsafe_arena_set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subscription_);
  }
  _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hedgehog.protocol.proto.EmergencyMessage.subscription)
}
inline ::hedgehog::protocol::proto::Subscription* EmergencyMessage::release_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hedgehog::protocol::proto::Subscription* released = _impl_.subscription_;
  _impl_.subscription_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::hedgehog::protocol::proto::Subscription* EmergencyMessage::unsafe_arena_release_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:hedgehog.protocol.proto.EmergencyMessage.subscription)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hedgehog::protocol::proto::Subscription* temp = _impl_.subscription_;
  _impl_.subscription_ = nullptr;
  return temp;
}
inline ::hedgehog::protocol::proto::Subscription* EmergencyMessage::_internal_mutable_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subscription_ == nullptr) {
    auto* p = CreateMaybeMessage<::hedgehog::protocol::proto::Subscription>(GetArena());
    _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(p);
  }
  return _impl_.subscription_;
}
inline ::hedgehog::protocol::proto::Subscription* EmergencyMessage::mutable_subscription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::hedgehog::protocol::proto::Subscription* _msg = _internal_mutable_subscription();
  // @@protoc_insertion_point(field_mutable:hedgehog.protocol.proto.EmergencyMessage.subscription)
  return _msg;
}
inline void EmergencyMessage::set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subscription_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(value);
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.EmergencyMessage.subscription)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2femergency_2eproto_2epb_2eh
