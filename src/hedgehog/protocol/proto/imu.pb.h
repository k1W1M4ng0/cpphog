// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hedgehog/protocol/proto/imu.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2fimu_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2fimu_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "hedgehog/protocol/proto/subscription.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_hedgehog_2fprotocol_2fproto_2fimu_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_hedgehog_2fprotocol_2fproto_2fimu_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto;
namespace hedgehog {
namespace protocol {
namespace proto {
class ImuMessage;
struct ImuMessageDefaultTypeInternal;
extern ImuMessageDefaultTypeInternal _ImuMessage_default_instance_;
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace hedgehog {
namespace protocol {
namespace proto {
enum ImuKind : int {
  RATE = 0,
  ACCELERATION = 1,
  POSE = 2,
  ImuKind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ImuKind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ImuKind_IsValid(int value);
extern const uint32_t ImuKind_internal_data_[];
constexpr ImuKind ImuKind_MIN = static_cast<ImuKind>(0);
constexpr ImuKind ImuKind_MAX = static_cast<ImuKind>(2);
constexpr int ImuKind_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ImuKind_descriptor();
template <typename T>
const std::string& ImuKind_Name(T value) {
  static_assert(std::is_same<T, ImuKind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ImuKind_Name().");
  return ImuKind_Name(static_cast<ImuKind>(value));
}
template <>
inline const std::string& ImuKind_Name(ImuKind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ImuKind_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ImuKind_Parse(absl::string_view name, ImuKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImuKind>(
      ImuKind_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ImuMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hedgehog.protocol.proto.ImuMessage) */ {
 public:
  inline ImuMessage() : ImuMessage(nullptr) {}
  ~ImuMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ImuMessage(::google::protobuf::internal::ConstantInitialized);

  inline ImuMessage(const ImuMessage& from)
      : ImuMessage(nullptr, from) {}
  ImuMessage(ImuMessage&& from) noexcept
    : ImuMessage() {
    *this = ::std::move(from);
  }

  inline ImuMessage& operator=(const ImuMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImuMessage& operator=(ImuMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImuMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImuMessage* internal_default_instance() {
    return reinterpret_cast<const ImuMessage*>(
               &_ImuMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ImuMessage& a, ImuMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ImuMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImuMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImuMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ImuMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImuMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ImuMessage& from) {
    ImuMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImuMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "hedgehog.protocol.proto.ImuMessage";
  }
  protected:
  explicit ImuMessage(::google::protobuf::Arena* arena);
  ImuMessage(::google::protobuf::Arena* arena, const ImuMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionFieldNumber = 5,
    kKindFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
  };
  // .hedgehog.protocol.proto.Subscription subscription = 5;
  bool has_subscription() const;
  void clear_subscription() ;
  const ::hedgehog::protocol::proto::Subscription& subscription() const;
  PROTOBUF_NODISCARD ::hedgehog::protocol::proto::Subscription* release_subscription();
  ::hedgehog::protocol::proto::Subscription* mutable_subscription();
  void set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value);
  void unsafe_arena_set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value);
  ::hedgehog::protocol::proto::Subscription* unsafe_arena_release_subscription();

  private:
  const ::hedgehog::protocol::proto::Subscription& _internal_subscription() const;
  ::hedgehog::protocol::proto::Subscription* _internal_mutable_subscription();

  public:
  // .hedgehog.protocol.proto.ImuKind kind = 1;
  void clear_kind() ;
  ::hedgehog::protocol::proto::ImuKind kind() const;
  void set_kind(::hedgehog::protocol::proto::ImuKind value);

  private:
  ::hedgehog::protocol::proto::ImuKind _internal_kind() const;
  void _internal_set_kind(::hedgehog::protocol::proto::ImuKind value);

  public:
  // sint32 x = 2;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // sint32 y = 3;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // sint32 z = 4;
  void clear_z() ;
  ::int32_t z() const;
  void set_z(::int32_t value);

  private:
  ::int32_t _internal_z() const;
  void _internal_set_z(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:hedgehog.protocol.proto.ImuMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::hedgehog::protocol::proto::Subscription* subscription_;
    int kind_;
    ::int32_t x_;
    ::int32_t y_;
    ::int32_t z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hedgehog_2fprotocol_2fproto_2fimu_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ImuMessage

// .hedgehog.protocol.proto.ImuKind kind = 1;
inline void ImuMessage::clear_kind() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kind_ = 0;
}
inline ::hedgehog::protocol::proto::ImuKind ImuMessage::kind() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.ImuMessage.kind)
  return _internal_kind();
}
inline void ImuMessage::set_kind(::hedgehog::protocol::proto::ImuKind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.ImuMessage.kind)
}
inline ::hedgehog::protocol::proto::ImuKind ImuMessage::_internal_kind() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::hedgehog::protocol::proto::ImuKind>(_impl_.kind_);
}
inline void ImuMessage::_internal_set_kind(::hedgehog::protocol::proto::ImuKind value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kind_ = value;
}

// sint32 x = 2;
inline void ImuMessage::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline ::int32_t ImuMessage::x() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.ImuMessage.x)
  return _internal_x();
}
inline void ImuMessage::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.ImuMessage.x)
}
inline ::int32_t ImuMessage::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void ImuMessage::_internal_set_x(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// sint32 y = 3;
inline void ImuMessage::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline ::int32_t ImuMessage::y() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.ImuMessage.y)
  return _internal_y();
}
inline void ImuMessage::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.ImuMessage.y)
}
inline ::int32_t ImuMessage::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void ImuMessage::_internal_set_y(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// sint32 z = 4;
inline void ImuMessage::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline ::int32_t ImuMessage::z() const {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.ImuMessage.z)
  return _internal_z();
}
inline void ImuMessage::set_z(::int32_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:hedgehog.protocol.proto.ImuMessage.z)
}
inline ::int32_t ImuMessage::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void ImuMessage::_internal_set_z(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// .hedgehog.protocol.proto.Subscription subscription = 5;
inline bool ImuMessage::has_subscription() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subscription_ != nullptr);
  return value;
}
inline const ::hedgehog::protocol::proto::Subscription& ImuMessage::_internal_subscription() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::hedgehog::protocol::proto::Subscription* p = _impl_.subscription_;
  return p != nullptr ? *p : reinterpret_cast<const ::hedgehog::protocol::proto::Subscription&>(::hedgehog::protocol::proto::_Subscription_default_instance_);
}
inline const ::hedgehog::protocol::proto::Subscription& ImuMessage::subscription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:hedgehog.protocol.proto.ImuMessage.subscription)
  return _internal_subscription();
}
inline void ImuMessage::unsafe_arena_set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subscription_);
  }
  _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hedgehog.protocol.proto.ImuMessage.subscription)
}
inline ::hedgehog::protocol::proto::Subscription* ImuMessage::release_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hedgehog::protocol::proto::Subscription* released = _impl_.subscription_;
  _impl_.subscription_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::hedgehog::protocol::proto::Subscription* ImuMessage::unsafe_arena_release_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:hedgehog.protocol.proto.ImuMessage.subscription)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hedgehog::protocol::proto::Subscription* temp = _impl_.subscription_;
  _impl_.subscription_ = nullptr;
  return temp;
}
inline ::hedgehog::protocol::proto::Subscription* ImuMessage::_internal_mutable_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subscription_ == nullptr) {
    auto* p = CreateMaybeMessage<::hedgehog::protocol::proto::Subscription>(GetArena());
    _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(p);
  }
  return _impl_.subscription_;
}
inline ::hedgehog::protocol::proto::Subscription* ImuMessage::mutable_subscription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::hedgehog::protocol::proto::Subscription* _msg = _internal_mutable_subscription();
  // @@protoc_insertion_point(field_mutable:hedgehog.protocol.proto.ImuMessage.subscription)
  return _msg;
}
inline void ImuMessage::set_allocated_subscription(::hedgehog::protocol::proto::Subscription* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subscription_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subscription_ = reinterpret_cast<::hedgehog::protocol::proto::Subscription*>(value);
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.ImuMessage.subscription)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::hedgehog::protocol::proto::ImuKind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::hedgehog::protocol::proto::ImuKind>() {
  return ::hedgehog::protocol::proto::ImuKind_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_hedgehog_2fprotocol_2fproto_2fimu_2eproto_2epb_2eh
