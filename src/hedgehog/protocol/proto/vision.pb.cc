// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hedgehog/protocol/proto/vision.proto

#include "hedgehog/protocol/proto/vision.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace hedgehog {
namespace protocol {
namespace proto {

inline constexpr VisionFrameMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : highlight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VisionFrameMessage::VisionFrameMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionFrameMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionFrameMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionFrameMessageDefaultTypeInternal() {}
  union {
    VisionFrameMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionFrameMessageDefaultTypeInternal _VisionFrameMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR VisionCaptureFrameAction::VisionCaptureFrameAction(::_pbi::ConstantInitialized) {}
struct VisionCaptureFrameActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionCaptureFrameActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionCaptureFrameActionDefaultTypeInternal() {}
  union {
    VisionCaptureFrameAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionCaptureFrameActionDefaultTypeInternal _VisionCaptureFrameAction_default_instance_;

inline constexpr VisionCameraAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : open_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VisionCameraAction::VisionCameraAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionCameraActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionCameraActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionCameraActionDefaultTypeInternal() {}
  union {
    VisionCameraAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionCameraActionDefaultTypeInternal _VisionCameraAction_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FacesChannel::FacesChannel(::_pbi::ConstantInitialized) {}
struct FacesChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FacesChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FacesChannelDefaultTypeInternal() {}
  union {
    FacesChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FacesChannelDefaultTypeInternal _FacesChannel_default_instance_;

inline constexpr Face::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        width_{0},
        height_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Face::Face(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FaceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FaceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FaceDefaultTypeInternal() {}
  union {
    Face _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FaceDefaultTypeInternal _Face_default_instance_;

inline constexpr BlobsChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hsv_min_{0u},
        hsv_max_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlobsChannel::BlobsChannel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobsChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobsChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobsChannelDefaultTypeInternal() {}
  union {
    BlobsChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobsChannelDefaultTypeInternal _BlobsChannel_default_instance_;

inline constexpr Blob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        width_{0},
        height_{0},
        cx_{0},
        cy_{0},
        confidence_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Blob::Blob(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobDefaultTypeInternal() {}
  union {
    Blob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobDefaultTypeInternal _Blob_default_instance_;

inline constexpr FacesFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : faces_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FacesFeature::FacesFeature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FacesFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FacesFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FacesFeatureDefaultTypeInternal() {}
  union {
    FacesFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FacesFeatureDefaultTypeInternal _FacesFeature_default_instance_;

inline constexpr Channel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Channel::Channel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDefaultTypeInternal() {}
  union {
    Channel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDefaultTypeInternal _Channel_default_instance_;

inline constexpr BlobsFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blobs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlobsFeature::BlobsFeature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobsFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobsFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobsFeatureDefaultTypeInternal() {}
  union {
    BlobsFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobsFeatureDefaultTypeInternal _BlobsFeature_default_instance_;

inline constexpr VisionChannelMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channels_{},
        op_{static_cast< ::hedgehog::protocol::proto::ChannelOperation >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VisionChannelMessage::VisionChannelMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionChannelMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionChannelMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionChannelMessageDefaultTypeInternal() {}
  union {
    VisionChannelMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionChannelMessageDefaultTypeInternal _VisionChannelMessage_default_instance_;

inline constexpr Feature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : feature_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Feature::Feature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeatureDefaultTypeInternal() {}
  union {
    Feature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeatureDefaultTypeInternal _Feature_default_instance_;

inline constexpr VisionFeatureMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        feature_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VisionFeatureMessage::VisionFeatureMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionFeatureMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionFeatureMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionFeatureMessageDefaultTypeInternal() {}
  union {
    VisionFeatureMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionFeatureMessageDefaultTypeInternal _VisionFeatureMessage_default_instance_;
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
static ::_pb::Metadata file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[13];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fvision_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fvision_2eproto = nullptr;
const ::uint32_t TableStruct_hedgehog_2fprotocol_2fproto_2fvision_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::FacesChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::BlobsChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::BlobsChannel, _impl_.hsv_min_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::BlobsChannel, _impl_.hsv_max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Channel, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Channel, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Channel, _impl_.key_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Channel, _impl_.channel_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Face, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Face, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Face, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Face, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Face, _impl_.height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::FacesFeature, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::FacesFeature, _impl_.faces_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.cx_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.cy_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Blob, _impl_.confidence_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::BlobsFeature, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::BlobsFeature, _impl_.blobs_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Feature, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Feature, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Feature, _impl_.feature_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionCameraAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionCameraAction, _impl_.open_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionChannelMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionChannelMessage, _impl_.op_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionChannelMessage, _impl_.channels_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionCaptureFrameAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFrameMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFrameMessage, _impl_.highlight_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFrameMessage, _impl_.frame_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFeatureMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFeatureMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFeatureMessage, _impl_.channel_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::VisionFeatureMessage, _impl_.feature_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::hedgehog::protocol::proto::FacesChannel)},
        {8, -1, -1, sizeof(::hedgehog::protocol::proto::BlobsChannel)},
        {18, -1, -1, sizeof(::hedgehog::protocol::proto::Channel)},
        {30, -1, -1, sizeof(::hedgehog::protocol::proto::Face)},
        {42, -1, -1, sizeof(::hedgehog::protocol::proto::FacesFeature)},
        {51, -1, -1, sizeof(::hedgehog::protocol::proto::Blob)},
        {66, -1, -1, sizeof(::hedgehog::protocol::proto::BlobsFeature)},
        {75, -1, -1, sizeof(::hedgehog::protocol::proto::Feature)},
        {86, -1, -1, sizeof(::hedgehog::protocol::proto::VisionCameraAction)},
        {95, -1, -1, sizeof(::hedgehog::protocol::proto::VisionChannelMessage)},
        {105, -1, -1, sizeof(::hedgehog::protocol::proto::VisionCaptureFrameAction)},
        {113, -1, -1, sizeof(::hedgehog::protocol::proto::VisionFrameMessage)},
        {123, 133, -1, sizeof(::hedgehog::protocol::proto::VisionFeatureMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::hedgehog::protocol::proto::_FacesChannel_default_instance_._instance,
    &::hedgehog::protocol::proto::_BlobsChannel_default_instance_._instance,
    &::hedgehog::protocol::proto::_Channel_default_instance_._instance,
    &::hedgehog::protocol::proto::_Face_default_instance_._instance,
    &::hedgehog::protocol::proto::_FacesFeature_default_instance_._instance,
    &::hedgehog::protocol::proto::_Blob_default_instance_._instance,
    &::hedgehog::protocol::proto::_BlobsFeature_default_instance_._instance,
    &::hedgehog::protocol::proto::_Feature_default_instance_._instance,
    &::hedgehog::protocol::proto::_VisionCameraAction_default_instance_._instance,
    &::hedgehog::protocol::proto::_VisionChannelMessage_default_instance_._instance,
    &::hedgehog::protocol::proto::_VisionCaptureFrameAction_default_instance_._instance,
    &::hedgehog::protocol::proto::_VisionFrameMessage_default_instance_._instance,
    &::hedgehog::protocol::proto::_VisionFeatureMessage_default_instance_._instance,
};
const char descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fvision_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n$hedgehog/protocol/proto/vision.proto\022\027"
    "hedgehog.protocol.proto\"\016\n\014FacesChannel\""
    "0\n\014BlobsChannel\022\017\n\007hsv_min\030\001 \001(\007\022\017\n\007hsv_"
    "max\030\002 \001(\007\"\221\001\n\007Channel\022\013\n\003key\030\001 \001(\t\0226\n\005fa"
    "ces\030\002 \001(\0132%.hedgehog.protocol.proto.Face"
    "sChannelH\000\0226\n\005blobs\030\003 \001(\0132%.hedgehog.pro"
    "tocol.proto.BlobsChannelH\000B\t\n\007channel\";\n"
    "\004Face\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005width\030\003 \001"
    "(\005\022\016\n\006height\030\004 \001(\005\"<\n\014FacesFeature\022,\n\005fa"
    "ces\030\001 \003(\0132\035.hedgehog.protocol.proto.Face"
    "\"g\n\004Blob\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005width\030"
    "\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\n\n\002cx\030\005 \001(\005\022\n\n\002cy\030"
    "\006 \001(\005\022\022\n\nconfidence\030\007 \001(\002\"<\n\014BlobsFeatur"
    "e\022,\n\005blobs\030\001 \003(\0132\035.hedgehog.protocol.pro"
    "to.Blob\"\204\001\n\007Feature\0226\n\005faces\030\001 \001(\0132%.hed"
    "gehog.protocol.proto.FacesFeatureH\000\0226\n\005b"
    "lobs\030\002 \001(\0132%.hedgehog.protocol.proto.Blo"
    "bsFeatureH\000B\t\n\007feature\"\"\n\022VisionCameraAc"
    "tion\022\014\n\004open\030\001 \001(\010\"\201\001\n\024VisionChannelMess"
    "age\0225\n\002op\030\001 \001(\0162).hedgehog.protocol.prot"
    "o.ChannelOperation\0222\n\010channels\030\002 \003(\0132 .h"
    "edgehog.protocol.proto.Channel\"\032\n\030Vision"
    "CaptureFrameAction\"6\n\022VisionFrameMessage"
    "\022\021\n\thighlight\030\001 \001(\t\022\r\n\005frame\030\002 \001(\014\"Z\n\024Vi"
    "sionFeatureMessage\022\017\n\007channel\030\001 \001(\t\0221\n\007f"
    "eature\030\002 \001(\0132 .hedgehog.protocol.proto.F"
    "eature*@\n\020ChannelOperation\022\010\n\004READ\020\000\022\n\n\006"
    "CREATE\020\001\022\n\n\006UPDATE\020\002\022\n\n\006DELETE\020\003B*\n\037at.p"
    "ria.hedgehog.protocol.protoB\007VisionPb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto = {
    false,
    false,
    1164,
    descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fvision_2eproto,
    "hedgehog/protocol/proto/vision.proto",
    &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_hedgehog_2fprotocol_2fproto_2fvision_2eproto::offsets,
    file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto,
    file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fvision_2eproto,
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fvision_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter() {
  return &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_hedgehog_2fprotocol_2fproto_2fvision_2eproto(&descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto);
namespace hedgehog {
namespace protocol {
namespace proto {
const ::google::protobuf::EnumDescriptor* ChannelOperation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto);
  return file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fvision_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ChannelOperation_internal_data_[] = {
    262144u, 0u, };
bool ChannelOperation_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class FacesChannel::_Internal {
 public:
};

FacesChannel::FacesChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.FacesChannel)
}
FacesChannel::FacesChannel(
    ::google::protobuf::Arena* arena,
    const FacesChannel& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FacesChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.FacesChannel)
}









::google::protobuf::Metadata FacesChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[0]);
}
// ===================================================================

class BlobsChannel::_Internal {
 public:
};

BlobsChannel::BlobsChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.BlobsChannel)
}
BlobsChannel::BlobsChannel(
    ::google::protobuf::Arena* arena, const BlobsChannel& from)
    : BlobsChannel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlobsChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlobsChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hsv_min_),
           0,
           offsetof(Impl_, hsv_max_) -
               offsetof(Impl_, hsv_min_) +
               sizeof(Impl_::hsv_max_));
}
BlobsChannel::~BlobsChannel() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.BlobsChannel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobsChannel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlobsChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.BlobsChannel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.hsv_min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hsv_max_) -
      reinterpret_cast<char*>(&_impl_.hsv_min_)) + sizeof(_impl_.hsv_max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlobsChannel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> BlobsChannel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlobsChannel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // fixed32 hsv_max = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_max_)}},
    // fixed32 hsv_min = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // fixed32 hsv_min = 1;
    {PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
    // fixed32 hsv_max = 2;
    {PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BlobsChannel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.BlobsChannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // fixed32 hsv_min = 1;
  if (this->_internal_hsv_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_hsv_min(), target);
  }

  // fixed32 hsv_max = 2;
  if (this->_internal_hsv_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        2, this->_internal_hsv_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.BlobsChannel)
  return target;
}

::size_t BlobsChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.BlobsChannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed32 hsv_min = 1;
  if (this->_internal_hsv_min() != 0) {
    total_size += 5;
  }

  // fixed32 hsv_max = 2;
  if (this->_internal_hsv_max() != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlobsChannel::_class_data_ = {
    BlobsChannel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlobsChannel::GetClassData() const {
  return &_class_data_;
}

void BlobsChannel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlobsChannel*>(&to_msg);
  auto& from = static_cast<const BlobsChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.BlobsChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hsv_min() != 0) {
    _this->_internal_set_hsv_min(from._internal_hsv_min());
  }
  if (from._internal_hsv_max() != 0) {
    _this->_internal_set_hsv_max(from._internal_hsv_max());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobsChannel::CopyFrom(const BlobsChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.BlobsChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlobsChannel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlobsChannel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlobsChannel::InternalSwap(BlobsChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_max_)
      + sizeof(BlobsChannel::_impl_.hsv_max_)
      - PROTOBUF_FIELD_OFFSET(BlobsChannel, _impl_.hsv_min_)>(
          reinterpret_cast<char*>(&_impl_.hsv_min_),
          reinterpret_cast<char*>(&other->_impl_.hsv_min_));
}

::google::protobuf::Metadata BlobsChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[1]);
}
// ===================================================================

class Channel::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Channel, _impl_._oneof_case_);
  static const ::hedgehog::protocol::proto::FacesChannel& faces(const Channel* msg);
  static const ::hedgehog::protocol::proto::BlobsChannel& blobs(const Channel* msg);
};

const ::hedgehog::protocol::proto::FacesChannel& Channel::_Internal::faces(const Channel* msg) {
  return *msg->_impl_.channel_.faces_;
}
const ::hedgehog::protocol::proto::BlobsChannel& Channel::_Internal::blobs(const Channel* msg) {
  return *msg->_impl_.channel_.blobs_;
}
void Channel::set_allocated_faces(::hedgehog::protocol::proto::FacesChannel* faces) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_channel();
  if (faces) {
    ::google::protobuf::Arena* submessage_arena = faces->GetArena();
    if (message_arena != submessage_arena) {
      faces = ::google::protobuf::internal::GetOwnedMessage(message_arena, faces, submessage_arena);
    }
    set_has_faces();
    _impl_.channel_.faces_ = faces;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.Channel.faces)
}
void Channel::set_allocated_blobs(::hedgehog::protocol::proto::BlobsChannel* blobs) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_channel();
  if (blobs) {
    ::google::protobuf::Arena* submessage_arena = blobs->GetArena();
    if (message_arena != submessage_arena) {
      blobs = ::google::protobuf::internal::GetOwnedMessage(message_arena, blobs, submessage_arena);
    }
    set_has_blobs();
    _impl_.channel_.blobs_ = blobs;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.Channel.blobs)
}
Channel::Channel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.Channel)
}
inline PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        channel_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Channel::Channel(
    ::google::protobuf::Arena* arena,
    const Channel& from)
    : ::google::protobuf::Message(arena) {
  Channel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (channel_case()) {
    case CHANNEL_NOT_SET:
      break;
      case kFaces:
        _impl_.channel_.faces_ = CreateMaybeMessage<::hedgehog::protocol::proto::FacesChannel>(arena, *from._impl_.channel_.faces_);
        break;
      case kBlobs:
        _impl_.channel_.blobs_ = CreateMaybeMessage<::hedgehog::protocol::proto::BlobsChannel>(arena, *from._impl_.channel_.blobs_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.Channel)
}
inline PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        channel_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Channel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Channel::~Channel() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.Channel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Channel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (has_channel()) {
    clear_channel();
  }
  _impl_.~Impl_();
}

void Channel::clear_channel() {
// @@protoc_insertion_point(one_of_clear_start:hedgehog.protocol.proto.Channel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (channel_case()) {
    case kFaces: {
      if (GetArena() == nullptr) {
        delete _impl_.channel_.faces_;
      }
      break;
    }
    case kBlobs: {
      if (GetArena() == nullptr) {
        delete _impl_.channel_.blobs_;
      }
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CHANNEL_NOT_SET;
}


PROTOBUF_NOINLINE void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.Channel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  clear_channel();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Channel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 43, 2> Channel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Channel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .hedgehog.protocol.proto.FacesChannel faces = 2;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.channel_.faces_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .hedgehog.protocol.proto.BlobsChannel blobs = 3;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.channel_.blobs_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::hedgehog::protocol::proto::_FacesChannel_default_instance_},
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::BlobsChannel>()},
  }}, {{
    "\37\3\0\0\0\0\0\0"
    "hedgehog.protocol.proto.Channel"
    "key"
  }},
};

::uint8_t* Channel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.Channel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hedgehog.protocol.proto.Channel.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  switch (channel_case()) {
    case kFaces: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::faces(this),
          _Internal::faces(this).GetCachedSize(), target, stream);
      break;
    }
    case kBlobs: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::blobs(this),
          _Internal::blobs(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.Channel)
  return target;
}

::size_t Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.Channel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  switch (channel_case()) {
    // .hedgehog.protocol.proto.FacesChannel faces = 2;
    case kFaces: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_.faces_);
      break;
    }
    // .hedgehog.protocol.proto.BlobsChannel blobs = 3;
    case kBlobs: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_.blobs_);
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Channel::_class_data_ = {
    Channel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Channel::GetClassData() const {
  return &_class_data_;
}

void Channel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Channel*>(&to_msg);
  auto& from = static_cast<const Channel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.Channel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  switch (from.channel_case()) {
    case kFaces: {
      _this->_internal_mutable_faces()->::hedgehog::protocol::proto::FacesChannel::MergeFrom(
          from._internal_faces());
      break;
    }
    case kBlobs: {
      _this->_internal_mutable_blobs()->::hedgehog::protocol::proto::BlobsChannel::MergeFrom(
          from._internal_blobs());
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Channel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Channel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Channel::InternalSwap(Channel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  swap(_impl_.channel_, other->_impl_.channel_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[2]);
}
// ===================================================================

class Face::_Internal {
 public:
};

Face::Face(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.Face)
}
Face::Face(
    ::google::protobuf::Arena* arena, const Face& from)
    : Face(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Face::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Face::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::height_));
}
Face::~Face() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.Face)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Face::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Face::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.Face)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Face::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Face::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Face_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Face, _impl_.height_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Face, _impl_.height_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Face, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Face, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Face, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Face, _impl_.y_)}},
    // int32 width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Face, _impl_.width_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Face, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Face, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Face, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 width = 3;
    {PROTOBUF_FIELD_OFFSET(Face, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 4;
    {PROTOBUF_FIELD_OFFSET(Face, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Face::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.Face)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  // int32 width = 3;
  if (this->_internal_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->_internal_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.Face)
  return target;
}

::size_t Face::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.Face)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  // int32 width = 3;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Face::_class_data_ = {
    Face::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Face::GetClassData() const {
  return &_class_data_;
}

void Face::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Face*>(&to_msg);
  auto& from = static_cast<const Face&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.Face)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Face::CopyFrom(const Face& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.Face)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Face::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Face::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Face::InternalSwap(Face* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Face, _impl_.height_)
      + sizeof(Face::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Face, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Face::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[3]);
}
// ===================================================================

class FacesFeature::_Internal {
 public:
};

FacesFeature::FacesFeature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.FacesFeature)
}
inline PROTOBUF_NDEBUG_INLINE FacesFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : faces_{visibility, arena, from.faces_},
        _cached_size_{0} {}

FacesFeature::FacesFeature(
    ::google::protobuf::Arena* arena,
    const FacesFeature& from)
    : ::google::protobuf::Message(arena) {
  FacesFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.FacesFeature)
}
inline PROTOBUF_NDEBUG_INLINE FacesFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : faces_{visibility, arena},
        _cached_size_{0} {}

inline void FacesFeature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FacesFeature::~FacesFeature() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.FacesFeature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FacesFeature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FacesFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.FacesFeature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.faces_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FacesFeature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FacesFeature::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FacesFeature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .hedgehog.protocol.proto.Face faces = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FacesFeature, _impl_.faces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hedgehog.protocol.proto.Face faces = 1;
    {PROTOBUF_FIELD_OFFSET(FacesFeature, _impl_.faces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Face>()},
  }}, {{
  }},
};

::uint8_t* FacesFeature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.FacesFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hedgehog.protocol.proto.Face faces = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_faces_size()); i < n; i++) {
    const auto& repfield = this->_internal_faces().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.FacesFeature)
  return target;
}

::size_t FacesFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.FacesFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hedgehog.protocol.proto.Face faces = 1;
  total_size += 1UL * this->_internal_faces_size();
  for (const auto& msg : this->_internal_faces()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FacesFeature::_class_data_ = {
    FacesFeature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FacesFeature::GetClassData() const {
  return &_class_data_;
}

void FacesFeature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FacesFeature*>(&to_msg);
  auto& from = static_cast<const FacesFeature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.FacesFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_faces()->MergeFrom(
      from._internal_faces());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FacesFeature::CopyFrom(const FacesFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.FacesFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FacesFeature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FacesFeature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FacesFeature::InternalSwap(FacesFeature* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.faces_.InternalSwap(&other->_impl_.faces_);
}

::google::protobuf::Metadata FacesFeature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[4]);
}
// ===================================================================

class Blob::_Internal {
 public:
};

Blob::Blob(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.Blob)
}
Blob::Blob(
    ::google::protobuf::Arena* arena, const Blob& from)
    : Blob(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Blob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Blob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::confidence_));
}
Blob::~Blob() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.Blob)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Blob::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Blob::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.Blob)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.confidence_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.confidence_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Blob::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> Blob::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Blob_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.y_)}},
    // int32 width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.width_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.width_)}},
    // int32 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.height_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.height_)}},
    // int32 cx = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.cx_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.cx_)}},
    // int32 cy = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Blob, _impl_.cy_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.cy_)}},
    // float confidence = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.confidence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 width = 3;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 4;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 cx = 5;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.cx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 cy = 6;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.cy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float confidence = 7;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.confidence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Blob::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.Blob)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  // int32 width = 3;
  if (this->_internal_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_width(), target);
  }

  // int32 height = 4;
  if (this->_internal_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_height(), target);
  }

  // int32 cx = 5;
  if (this->_internal_cx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_cx(), target);
  }

  // int32 cy = 6;
  if (this->_internal_cy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_cy(), target);
  }

  // float confidence = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_confidence = this->_internal_confidence();
  ::uint32_t raw_confidence;
  memcpy(&raw_confidence, &tmp_confidence, sizeof(tmp_confidence));
  if (raw_confidence != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_confidence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.Blob)
  return target;
}

::size_t Blob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.Blob)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  // int32 width = 3;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_width());
  }

  // int32 height = 4;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_height());
  }

  // int32 cx = 5;
  if (this->_internal_cx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cx());
  }

  // int32 cy = 6;
  if (this->_internal_cy() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cy());
  }

  // float confidence = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_confidence = this->_internal_confidence();
  ::uint32_t raw_confidence;
  memcpy(&raw_confidence, &tmp_confidence, sizeof(tmp_confidence));
  if (raw_confidence != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Blob::_class_data_ = {
    Blob::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Blob::GetClassData() const {
  return &_class_data_;
}

void Blob::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Blob*>(&to_msg);
  auto& from = static_cast<const Blob&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.Blob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_cx() != 0) {
    _this->_internal_set_cx(from._internal_cx());
  }
  if (from._internal_cy() != 0) {
    _this->_internal_set_cy(from._internal_cy());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_confidence = from._internal_confidence();
  ::uint32_t raw_confidence;
  memcpy(&raw_confidence, &tmp_confidence, sizeof(tmp_confidence));
  if (raw_confidence != 0) {
    _this->_internal_set_confidence(from._internal_confidence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Blob::CopyFrom(const Blob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.Blob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Blob::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Blob::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Blob::InternalSwap(Blob* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Blob, _impl_.confidence_)
      + sizeof(Blob::_impl_.confidence_)
      - PROTOBUF_FIELD_OFFSET(Blob, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Blob::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[5]);
}
// ===================================================================

class BlobsFeature::_Internal {
 public:
};

BlobsFeature::BlobsFeature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.BlobsFeature)
}
inline PROTOBUF_NDEBUG_INLINE BlobsFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : blobs_{visibility, arena, from.blobs_},
        _cached_size_{0} {}

BlobsFeature::BlobsFeature(
    ::google::protobuf::Arena* arena,
    const BlobsFeature& from)
    : ::google::protobuf::Message(arena) {
  BlobsFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.BlobsFeature)
}
inline PROTOBUF_NDEBUG_INLINE BlobsFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blobs_{visibility, arena},
        _cached_size_{0} {}

inline void BlobsFeature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlobsFeature::~BlobsFeature() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.BlobsFeature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobsFeature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlobsFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.BlobsFeature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blobs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlobsFeature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlobsFeature::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BlobsFeature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .hedgehog.protocol.proto.Blob blobs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsFeature, _impl_.blobs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hedgehog.protocol.proto.Blob blobs = 1;
    {PROTOBUF_FIELD_OFFSET(BlobsFeature, _impl_.blobs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Blob>()},
  }}, {{
  }},
};

::uint8_t* BlobsFeature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.BlobsFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hedgehog.protocol.proto.Blob blobs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blobs_size()); i < n; i++) {
    const auto& repfield = this->_internal_blobs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.BlobsFeature)
  return target;
}

::size_t BlobsFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.BlobsFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hedgehog.protocol.proto.Blob blobs = 1;
  total_size += 1UL * this->_internal_blobs_size();
  for (const auto& msg : this->_internal_blobs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlobsFeature::_class_data_ = {
    BlobsFeature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlobsFeature::GetClassData() const {
  return &_class_data_;
}

void BlobsFeature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlobsFeature*>(&to_msg);
  auto& from = static_cast<const BlobsFeature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.BlobsFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blobs()->MergeFrom(
      from._internal_blobs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobsFeature::CopyFrom(const BlobsFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.BlobsFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlobsFeature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlobsFeature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlobsFeature::InternalSwap(BlobsFeature* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blobs_.InternalSwap(&other->_impl_.blobs_);
}

::google::protobuf::Metadata BlobsFeature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[6]);
}
// ===================================================================

class Feature::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::Feature, _impl_._oneof_case_);
  static const ::hedgehog::protocol::proto::FacesFeature& faces(const Feature* msg);
  static const ::hedgehog::protocol::proto::BlobsFeature& blobs(const Feature* msg);
};

const ::hedgehog::protocol::proto::FacesFeature& Feature::_Internal::faces(const Feature* msg) {
  return *msg->_impl_.feature_.faces_;
}
const ::hedgehog::protocol::proto::BlobsFeature& Feature::_Internal::blobs(const Feature* msg) {
  return *msg->_impl_.feature_.blobs_;
}
void Feature::set_allocated_faces(::hedgehog::protocol::proto::FacesFeature* faces) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (faces) {
    ::google::protobuf::Arena* submessage_arena = faces->GetArena();
    if (message_arena != submessage_arena) {
      faces = ::google::protobuf::internal::GetOwnedMessage(message_arena, faces, submessage_arena);
    }
    set_has_faces();
    _impl_.feature_.faces_ = faces;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.Feature.faces)
}
void Feature::set_allocated_blobs(::hedgehog::protocol::proto::BlobsFeature* blobs) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (blobs) {
    ::google::protobuf::Arena* submessage_arena = blobs->GetArena();
    if (message_arena != submessage_arena) {
      blobs = ::google::protobuf::internal::GetOwnedMessage(message_arena, blobs, submessage_arena);
    }
    set_has_blobs();
    _impl_.feature_.blobs_ = blobs;
  }
  // @@protoc_insertion_point(field_set_allocated:hedgehog.protocol.proto.Feature.blobs)
}
Feature::Feature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.Feature)
}
inline PROTOBUF_NDEBUG_INLINE Feature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : feature_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Feature::Feature(
    ::google::protobuf::Arena* arena,
    const Feature& from)
    : ::google::protobuf::Message(arena) {
  Feature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (feature_case()) {
    case FEATURE_NOT_SET:
      break;
      case kFaces:
        _impl_.feature_.faces_ = CreateMaybeMessage<::hedgehog::protocol::proto::FacesFeature>(arena, *from._impl_.feature_.faces_);
        break;
      case kBlobs:
        _impl_.feature_.blobs_ = CreateMaybeMessage<::hedgehog::protocol::proto::BlobsFeature>(arena, *from._impl_.feature_.blobs_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.Feature)
}
inline PROTOBUF_NDEBUG_INLINE Feature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : feature_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Feature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Feature::~Feature() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.Feature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Feature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_feature()) {
    clear_feature();
  }
  _impl_.~Impl_();
}

void Feature::clear_feature() {
// @@protoc_insertion_point(one_of_clear_start:hedgehog.protocol.proto.Feature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (feature_case()) {
    case kFaces: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.faces_;
      }
      break;
    }
    case kBlobs: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.blobs_;
      }
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FEATURE_NOT_SET;
}


PROTOBUF_NOINLINE void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.Feature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_feature();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Feature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> Feature::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Feature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .hedgehog.protocol.proto.FacesFeature faces = 1;
    {PROTOBUF_FIELD_OFFSET(Feature, _impl_.feature_.faces_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .hedgehog.protocol.proto.BlobsFeature blobs = 2;
    {PROTOBUF_FIELD_OFFSET(Feature, _impl_.feature_.blobs_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::FacesFeature>()},
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::BlobsFeature>()},
  }}, {{
  }},
};

::uint8_t* Feature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.Feature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (feature_case()) {
    case kFaces: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::faces(this),
          _Internal::faces(this).GetCachedSize(), target, stream);
      break;
    }
    case kBlobs: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::blobs(this),
          _Internal::blobs(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.Feature)
  return target;
}

::size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.Feature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (feature_case()) {
    // .hedgehog.protocol.proto.FacesFeature faces = 1;
    case kFaces: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.feature_.faces_);
      break;
    }
    // .hedgehog.protocol.proto.BlobsFeature blobs = 2;
    case kBlobs: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.feature_.blobs_);
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Feature::_class_data_ = {
    Feature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Feature::GetClassData() const {
  return &_class_data_;
}

void Feature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Feature*>(&to_msg);
  auto& from = static_cast<const Feature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.Feature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.feature_case()) {
    case kFaces: {
      _this->_internal_mutable_faces()->::hedgehog::protocol::proto::FacesFeature::MergeFrom(
          from._internal_faces());
      break;
    }
    case kBlobs: {
      _this->_internal_mutable_blobs()->::hedgehog::protocol::proto::BlobsFeature::MergeFrom(
          from._internal_blobs());
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Feature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Feature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Feature::InternalSwap(Feature* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.feature_, other->_impl_.feature_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[7]);
}
// ===================================================================

class VisionCameraAction::_Internal {
 public:
};

VisionCameraAction::VisionCameraAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.VisionCameraAction)
}
VisionCameraAction::VisionCameraAction(
    ::google::protobuf::Arena* arena, const VisionCameraAction& from)
    : VisionCameraAction(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VisionCameraAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VisionCameraAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.open_ = {};
}
VisionCameraAction::~VisionCameraAction() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.VisionCameraAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionCameraAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisionCameraAction::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.VisionCameraAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.open_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionCameraAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VisionCameraAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisionCameraAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool open = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VisionCameraAction, _impl_.open_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VisionCameraAction, _impl_.open_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool open = 1;
    {PROTOBUF_FIELD_OFFSET(VisionCameraAction, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VisionCameraAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.VisionCameraAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool open = 1;
  if (this->_internal_open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_open(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.VisionCameraAction)
  return target;
}

::size_t VisionCameraAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.VisionCameraAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool open = 1;
  if (this->_internal_open() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisionCameraAction::_class_data_ = {
    VisionCameraAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisionCameraAction::GetClassData() const {
  return &_class_data_;
}

void VisionCameraAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisionCameraAction*>(&to_msg);
  auto& from = static_cast<const VisionCameraAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.VisionCameraAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_open() != 0) {
    _this->_internal_set_open(from._internal_open());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionCameraAction::CopyFrom(const VisionCameraAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.VisionCameraAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionCameraAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisionCameraAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisionCameraAction::InternalSwap(VisionCameraAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.open_, other->_impl_.open_);
}

::google::protobuf::Metadata VisionCameraAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[8]);
}
// ===================================================================

class VisionChannelMessage::_Internal {
 public:
};

VisionChannelMessage::VisionChannelMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.VisionChannelMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionChannelMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : channels_{visibility, arena, from.channels_},
        _cached_size_{0} {}

VisionChannelMessage::VisionChannelMessage(
    ::google::protobuf::Arena* arena,
    const VisionChannelMessage& from)
    : ::google::protobuf::Message(arena) {
  VisionChannelMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.op_ = from._impl_.op_;

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.VisionChannelMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionChannelMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channels_{visibility, arena},
        _cached_size_{0} {}

inline void VisionChannelMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.op_ = {};
}
VisionChannelMessage::~VisionChannelMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.VisionChannelMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionChannelMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisionChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.VisionChannelMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.op_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionChannelMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> VisionChannelMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisionChannelMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .hedgehog.protocol.proto.Channel channels = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VisionChannelMessage, _impl_.channels_)}},
    // .hedgehog.protocol.proto.ChannelOperation op = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionChannelMessage, _impl_.op_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VisionChannelMessage, _impl_.op_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .hedgehog.protocol.proto.ChannelOperation op = 1;
    {PROTOBUF_FIELD_OFFSET(VisionChannelMessage, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .hedgehog.protocol.proto.Channel channels = 2;
    {PROTOBUF_FIELD_OFFSET(VisionChannelMessage, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Channel>()},
  }}, {{
  }},
};

::uint8_t* VisionChannelMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.VisionChannelMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .hedgehog.protocol.proto.ChannelOperation op = 1;
  if (this->_internal_op() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_op(), target);
  }

  // repeated .hedgehog.protocol.proto.Channel channels = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_channels_size()); i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.VisionChannelMessage)
  return target;
}

::size_t VisionChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.VisionChannelMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hedgehog.protocol.proto.Channel channels = 2;
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .hedgehog.protocol.proto.ChannelOperation op = 1;
  if (this->_internal_op() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_op());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisionChannelMessage::_class_data_ = {
    VisionChannelMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisionChannelMessage::GetClassData() const {
  return &_class_data_;
}

void VisionChannelMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisionChannelMessage*>(&to_msg);
  auto& from = static_cast<const VisionChannelMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.VisionChannelMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(
      from._internal_channels());
  if (from._internal_op() != 0) {
    _this->_internal_set_op(from._internal_op());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionChannelMessage::CopyFrom(const VisionChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.VisionChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionChannelMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisionChannelMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisionChannelMessage::InternalSwap(VisionChannelMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  swap(_impl_.op_, other->_impl_.op_);
}

::google::protobuf::Metadata VisionChannelMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[9]);
}
// ===================================================================

class VisionCaptureFrameAction::_Internal {
 public:
};

VisionCaptureFrameAction::VisionCaptureFrameAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.VisionCaptureFrameAction)
}
VisionCaptureFrameAction::VisionCaptureFrameAction(
    ::google::protobuf::Arena* arena,
    const VisionCaptureFrameAction& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  VisionCaptureFrameAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.VisionCaptureFrameAction)
}









::google::protobuf::Metadata VisionCaptureFrameAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[10]);
}
// ===================================================================

class VisionFrameMessage::_Internal {
 public:
};

VisionFrameMessage::VisionFrameMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.VisionFrameMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionFrameMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : highlight_(arena, from.highlight_),
        frame_(arena, from.frame_),
        _cached_size_{0} {}

VisionFrameMessage::VisionFrameMessage(
    ::google::protobuf::Arena* arena,
    const VisionFrameMessage& from)
    : ::google::protobuf::Message(arena) {
  VisionFrameMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.VisionFrameMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionFrameMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : highlight_(arena),
        frame_(arena),
        _cached_size_{0} {}

inline void VisionFrameMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VisionFrameMessage::~VisionFrameMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.VisionFrameMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionFrameMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.highlight_.Destroy();
  _impl_.frame_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisionFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.VisionFrameMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.highlight_.ClearToEmpty();
  _impl_.frame_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionFrameMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> VisionFrameMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisionFrameMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes frame = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VisionFrameMessage, _impl_.frame_)}},
    // string highlight = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VisionFrameMessage, _impl_.highlight_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string highlight = 1;
    {PROTOBUF_FIELD_OFFSET(VisionFrameMessage, _impl_.highlight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes frame = 2;
    {PROTOBUF_FIELD_OFFSET(VisionFrameMessage, _impl_.frame_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\11\0\0\0\0\0\0"
    "hedgehog.protocol.proto.VisionFrameMessage"
    "highlight"
  }},
};

::uint8_t* VisionFrameMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.VisionFrameMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string highlight = 1;
  if (!this->_internal_highlight().empty()) {
    const std::string& _s = this->_internal_highlight();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hedgehog.protocol.proto.VisionFrameMessage.highlight");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    const std::string& _s = this->_internal_frame();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.VisionFrameMessage)
  return target;
}

::size_t VisionFrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.VisionFrameMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string highlight = 1;
  if (!this->_internal_highlight().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_highlight());
  }

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_frame());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisionFrameMessage::_class_data_ = {
    VisionFrameMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisionFrameMessage::GetClassData() const {
  return &_class_data_;
}

void VisionFrameMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisionFrameMessage*>(&to_msg);
  auto& from = static_cast<const VisionFrameMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.VisionFrameMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_highlight().empty()) {
    _this->_internal_set_highlight(from._internal_highlight());
  }
  if (!from._internal_frame().empty()) {
    _this->_internal_set_frame(from._internal_frame());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionFrameMessage::CopyFrom(const VisionFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.VisionFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionFrameMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisionFrameMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisionFrameMessage::InternalSwap(VisionFrameMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.highlight_, &other->_impl_.highlight_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_, &other->_impl_.frame_, arena);
}

::google::protobuf::Metadata VisionFrameMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[11]);
}
// ===================================================================

class VisionFeatureMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<VisionFeatureMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_._has_bits_);
  static const ::hedgehog::protocol::proto::Feature& feature(const VisionFeatureMessage* msg);
  static void set_has_feature(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::hedgehog::protocol::proto::Feature& VisionFeatureMessage::_Internal::feature(const VisionFeatureMessage* msg) {
  return *msg->_impl_.feature_;
}
VisionFeatureMessage::VisionFeatureMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.VisionFeatureMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionFeatureMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_(arena, from.channel_) {}

VisionFeatureMessage::VisionFeatureMessage(
    ::google::protobuf::Arena* arena,
    const VisionFeatureMessage& from)
    : ::google::protobuf::Message(arena) {
  VisionFeatureMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.feature_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::hedgehog::protocol::proto::Feature>(arena, *from._impl_.feature_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.VisionFeatureMessage)
}
inline PROTOBUF_NDEBUG_INLINE VisionFeatureMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channel_(arena) {}

inline void VisionFeatureMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.feature_ = {};
}
VisionFeatureMessage::~VisionFeatureMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.VisionFeatureMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionFeatureMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.channel_.Destroy();
  delete _impl_.feature_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisionFeatureMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.VisionFeatureMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.feature_ != nullptr);
    _impl_.feature_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionFeatureMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 60, 2> VisionFeatureMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisionFeatureMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .hedgehog.protocol.proto.Feature feature = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_.feature_)}},
    // string channel = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string channel = 1;
    {PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .hedgehog.protocol.proto.Feature feature = 2;
    {PROTOBUF_FIELD_OFFSET(VisionFeatureMessage, _impl_.feature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Feature>()},
  }}, {{
    "\54\7\0\0\0\0\0\0"
    "hedgehog.protocol.proto.VisionFeatureMessage"
    "channel"
  }},
};

::uint8_t* VisionFeatureMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.VisionFeatureMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string channel = 1;
  if (!this->_internal_channel().empty()) {
    const std::string& _s = this->_internal_channel();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hedgehog.protocol.proto.VisionFeatureMessage.channel");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hedgehog.protocol.proto.Feature feature = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::feature(this),
        _Internal::feature(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.VisionFeatureMessage)
  return target;
}

::size_t VisionFeatureMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.VisionFeatureMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channel = 1;
  if (!this->_internal_channel().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_channel());
  }

  // .hedgehog.protocol.proto.Feature feature = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.feature_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisionFeatureMessage::_class_data_ = {
    VisionFeatureMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisionFeatureMessage::GetClassData() const {
  return &_class_data_;
}

void VisionFeatureMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisionFeatureMessage*>(&to_msg);
  auto& from = static_cast<const VisionFeatureMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.VisionFeatureMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_feature()->::hedgehog::protocol::proto::Feature::MergeFrom(
        from._internal_feature());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionFeatureMessage::CopyFrom(const VisionFeatureMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.VisionFeatureMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionFeatureMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisionFeatureMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisionFeatureMessage::InternalSwap(VisionFeatureMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  swap(_impl_.feature_, other->_impl_.feature_);
}

::google::protobuf::Metadata VisionFeatureMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fvision_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fvision_2eproto[12]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
