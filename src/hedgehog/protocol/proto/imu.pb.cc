// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hedgehog/protocol/proto/imu.proto

#include "hedgehog/protocol/proto/imu.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace hedgehog {
namespace protocol {
namespace proto {

inline constexpr ImuMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscription_{nullptr},
        kind_{static_cast< ::hedgehog::protocol::proto::ImuKind >(0)},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImuMessage::ImuMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImuMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuMessageDefaultTypeInternal() {}
  union {
    ImuMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuMessageDefaultTypeInternal _ImuMessage_default_instance_;
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
static ::_pb::Metadata file_level_metadata_hedgehog_2fprotocol_2fproto_2fimu_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fimu_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fimu_2eproto = nullptr;
const ::uint32_t TableStruct_hedgehog_2fprotocol_2fproto_2fimu_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::hedgehog::protocol::proto::ImuMessage, _impl_.subscription_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::hedgehog::protocol::proto::ImuMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::hedgehog::protocol::proto::_ImuMessage_default_instance_._instance,
};
const char descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fimu_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!hedgehog/protocol/proto/imu.proto\022\027hed"
    "gehog.protocol.proto\032*hedgehog/protocol/"
    "proto/subscription.proto\"\232\001\n\nImuMessage\022"
    ".\n\004kind\030\001 \001(\0162 .hedgehog.protocol.proto."
    "ImuKind\022\t\n\001x\030\002 \001(\021\022\t\n\001y\030\003 \001(\021\022\t\n\001z\030\004 \001(\021"
    "\022;\n\014subscription\030\005 \001(\0132%.hedgehog.protoc"
    "ol.proto.Subscription*/\n\007ImuKind\022\010\n\004RATE"
    "\020\000\022\020\n\014ACCELERATION\020\001\022\010\n\004POSE\020\002B\'\n\037at.pri"
    "a.hedgehog.protocol.protoB\004ImuPb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_deps[1] =
    {
        &::descriptor_table_hedgehog_2fprotocol_2fproto_2fsubscription_2eproto,
};
static ::absl::once_flag descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto = {
    false,
    false,
    359,
    descriptor_table_protodef_hedgehog_2fprotocol_2fproto_2fimu_2eproto,
    "hedgehog/protocol/proto/imu.proto",
    &descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_once,
    descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_hedgehog_2fprotocol_2fproto_2fimu_2eproto::offsets,
    file_level_metadata_hedgehog_2fprotocol_2fproto_2fimu_2eproto,
    file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fimu_2eproto,
    file_level_service_descriptors_hedgehog_2fprotocol_2fproto_2fimu_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_getter() {
  return &descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_hedgehog_2fprotocol_2fproto_2fimu_2eproto(&descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto);
namespace hedgehog {
namespace protocol {
namespace proto {
const ::google::protobuf::EnumDescriptor* ImuKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto);
  return file_level_enum_descriptors_hedgehog_2fprotocol_2fproto_2fimu_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ImuKind_internal_data_[] = {
    196608u, 0u, };
bool ImuKind_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class ImuMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ImuMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_._has_bits_);
  static const ::hedgehog::protocol::proto::Subscription& subscription(const ImuMessage* msg);
  static void set_has_subscription(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::hedgehog::protocol::proto::Subscription& ImuMessage::_Internal::subscription(const ImuMessage* msg) {
  return *msg->_impl_.subscription_;
}
void ImuMessage::clear_subscription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.subscription_ != nullptr) _impl_.subscription_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ImuMessage::ImuMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hedgehog.protocol.proto.ImuMessage)
}
inline PROTOBUF_NDEBUG_INLINE ImuMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImuMessage::ImuMessage(
    ::google::protobuf::Arena* arena,
    const ImuMessage& from)
    : ::google::protobuf::Message(arena) {
  ImuMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscription_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::hedgehog::protocol::proto::Subscription>(arena, *from._impl_.subscription_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kind_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, kind_),
           offsetof(Impl_, z_) -
               offsetof(Impl_, kind_) +
               sizeof(Impl_::z_));

  // @@protoc_insertion_point(copy_constructor:hedgehog.protocol.proto.ImuMessage)
}
inline PROTOBUF_NDEBUG_INLINE ImuMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImuMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, subscription_) +
               sizeof(Impl_::z_));
}
ImuMessage::~ImuMessage() {
  // @@protoc_insertion_point(destructor:hedgehog.protocol.proto.ImuMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImuMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.subscription_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ImuMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hedgehog.protocol.proto.ImuMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subscription_ != nullptr);
    _impl_.subscription_->Clear();
  }
  ::memset(&_impl_.kind_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.z_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ImuMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> ImuMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImuMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .hedgehog.protocol.proto.ImuKind kind = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImuMessage, _impl_.kind_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.kind_)}},
    // sint32 x = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.x_)}},
    // sint32 y = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.y_)}},
    // sint32 z = 4;
    {::_pbi::TcParser::FastZ32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.z_)}},
    // .hedgehog.protocol.proto.Subscription subscription = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.subscription_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .hedgehog.protocol.proto.ImuKind kind = 1;
    {PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.kind_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // sint32 x = 2;
    {PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 y = 3;
    {PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 z = 4;
    {PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.z_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // .hedgehog.protocol.proto.Subscription subscription = 5;
    {PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.subscription_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hedgehog::protocol::proto::Subscription>()},
  }}, {{
  }},
};

::uint8_t* ImuMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hedgehog.protocol.proto.ImuMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .hedgehog.protocol.proto.ImuKind kind = 1;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_kind(), target);
  }

  // sint32 x = 2;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_x(), target);
  }

  // sint32 y = 3;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_y(), target);
  }

  // sint32 z = 4;
  if (this->_internal_z() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        4, this->_internal_z(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hedgehog.protocol.proto.Subscription subscription = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::subscription(this),
        _Internal::subscription(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hedgehog.protocol.proto.ImuMessage)
  return target;
}

::size_t ImuMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hedgehog.protocol.proto.ImuMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hedgehog.protocol.proto.Subscription subscription = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.subscription_);
  }

  // .hedgehog.protocol.proto.ImuKind kind = 1;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  // sint32 x = 2;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_x());
  }

  // sint32 y = 3;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_y());
  }

  // sint32 z = 4;
  if (this->_internal_z() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_z());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ImuMessage::_class_data_ = {
    ImuMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ImuMessage::GetClassData() const {
  return &_class_data_;
}

void ImuMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ImuMessage*>(&to_msg);
  auto& from = static_cast<const ImuMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hedgehog.protocol.proto.ImuMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subscription()->::hedgehog::protocol::proto::Subscription::MergeFrom(
        from._internal_subscription());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_z() != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImuMessage::CopyFrom(const ImuMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hedgehog.protocol.proto.ImuMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ImuMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ImuMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ImuMessage::InternalSwap(ImuMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.z_)
      + sizeof(ImuMessage::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(ImuMessage, _impl_.subscription_)>(
          reinterpret_cast<char*>(&_impl_.subscription_),
          reinterpret_cast<char*>(&other->_impl_.subscription_));
}

::google::protobuf::Metadata ImuMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_getter, &descriptor_table_hedgehog_2fprotocol_2fproto_2fimu_2eproto_once,
      file_level_metadata_hedgehog_2fprotocol_2fproto_2fimu_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace protocol
}  // namespace hedgehog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
